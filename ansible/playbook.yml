- hosts: minecraft
  become: yes
  tasks:
    - name: Download and install Java 21
      shell: |
        curl -L -o /tmp/corretto.tar.gz https://corretto.aws/downloads/latest/amazon-corretto-21-x64-linux-jdk.tar.gz
        mkdir -p /opt/corretto
        tar -xzf /tmp/corretto.tar.gz -C /opt/corretto --strip-components=1
        alternatives --install /usr/bin/java java /opt/corretto/bin/java 1
      args:
        executable: /bin/bash
      #Run ansible in regular environment
      when: not ansible_check_mode 

    - name: Set Java 21 as default
      shell: |
        alternatives --install /usr/bin/java java /opt/corretto/bin/java 1
        alternatives --set java /opt/corretto/bin/java
      args:
        executable: /bin/bash

    - name: Verify Java 
      command: java -version
    
    - name: AWS CLI Installation using yum
      yum:
        name:
          - unzip
          - awscli
        state: present
      register: yum_result
      retries: 5
      delay: 10
      until: yum_result is succeeded

    #- name: AWS CLI Installation using apt
      #apt:
        #name:
          #- curl
          #- unzip
        #state: present
    
    #- name: Download AWS CLI
      #get_url:
        #url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        #dest: "/tmp/awscliv2.zip"
    
    #- name: Unzip
      #unarchive:
        #src: "/tmp/awscliv2.zip"
        #dest: "/tmp"
        #remote_src: yes

    #- name: Run & verify installer
      #command: "/tmp/aws/install"
      #command: "aws --version"
      #register: aws_cli_version

    - name: Accept EULA
      copy:
        dest: /home/ec2-user/minecraft/eula.txt
        content: "eula=true"
      #Run ansible in regular environment
      when: not ansible_check_mode

    - name: Directory Setup
      file:
        path: /home/ec2-user/minecraft
        state: present
        owner: ec2-user
        group: ec2-user
        mode: "0755"

    - name: Download Servers
      get_url:
        url: "https://piston-data.mojang.com/v1/objects/05e4b48fbc01f0385adb74bcff9751d34552486c/server.jar"
        dest: /home/ec2-user/minecraft/server.jar
      when: not ansible_check_mode #Run ansible in regular environment

    - name: Sync Servers from S3 to ec2 
      shell: |
        aws s3 cp s3://{{ lookup('env', 'S3_BUCKET') }}/world.zip /tmp/world.zip || true
        unzip -o /tmp/world.zip -d /home/ec2-user/minecraft || true
      args:
        executable: /bin/bash # path specification for shell command

    - name: Copy Server data to local inventory
      copy:
        src: /mnt/workspace/server-icon.png
        dest: /home/ec2-user/minecraft/server-icon.png
        owner: ec2-user
        group: ec2-user
        mode: "0644"

    - name: Server Configuration
      copy:
        dest: /home/ec2-user/minecraft/server.properties
        content: 
        #fill in content
          enable-jmx-monitoring=false
          rcon.port=25575
          level-seed=
          gamemode=creative
          enable-command-block=false
          enable-query=false
          generator-settings={}
          enforce-secure-profile=true
          level-name=spacelift-world
          level-type=minecraft:flat
          motd={{ lookup('env', 'MOTD') }}
          query.port=25565
          pvp=true
          generate-structures=true
          max-chained-neighbor-updates=1000000
          difficulty=easy
          network-compression-threshold=256
          max-tick-time=60000
          require-resource-pack=false
          use-native-transport=true
          max-players={{ lookup('env', 'MAX_PLAYERS') }}
          online-mode=true
          allow-flight=false
          broadcast-rcon-to-ops=true
          view-distance=10
          server-ip=
          resource-pack-prompt=
          allow-nether=true
          server-port=25565
          enable-rcon=false
          sync-chunk-writes=true
          op-permission-level=4
          prevent-proxy-connections=false
          hide-online-players=false
          resource-pack=
          entity-broadcast-range-percentage=100
          simulation-distance=10
          rcon.password=
          player-idle-timeout=0
          force-gamemode=false
          rate-limit=0
          hardcore=false
          white-list=false
          broadcast-console-to-ops=true
          spawn-npcs=true
          spawn-animals=true
          function-permission-level=2
          text-filtering-config=
          spawn-monsters=true
          enforce-whitelist=false
          spawn-protection=16
          resource-pack-sha1=
          max-world-size=29999984
        owner: ec2-user
        group: ec2-user
        mode: "0644"
      when: not ansible_check_mode #Run ansible in regular environment

    - name: Start Servers
      shell: |
        cd /home/ec2-user/minecraft
        nohup java -Xmx1024M -Xms1024M -jar server.jar nogui &
      args:
        executable: /bin/bash
      when: not ansible_check_mode #Run ansible in regular environment

    - name: Server Deletion # Server Restart and Update.
      shell: | #"|" is used for multiline 
        pgrep -f "server.jar" | xargs --no-run-if-empty kill
      args:
        executable: /bin/bash
        ignore_errors: true #error handling to continue despite failure
        failed_when: false #conditional failure of task
    







    


    

